---
# vars file for transformers
- name: Include OS specific variables
  include_vars: "{{ ansible_distribution }}{{ ansible_distribution_major_version }}.yml"

- name: Check if ImageMagick is installed
  command:
    cmd: "convert --version"
  register: magick_exists
  failed_when: false
  changed_when: magick_exists.rc != 0

- include_tasks: install-ImageMagick-depLibs.yml
  when: magick_exists.rc != 0


#- name: Ensure a list of packages installed
#  become: true
#  become_user: root
#  package:
#    name: "{{ item }}"
#    state: present
#  poll: 0
#  loop: "{{ utils_transform }}"

- name: Transfer ImageMagick libs
  copy:
    src: "{{ role_path }}/files/CentOS{{ ansible_distribution_major_version }}/ImageMagick"
    dest: "{{ download_location }}/"
  register: transfer_img_libs_dist
  until: transfer_img_libs_dist is succeeded
  when: magick_exists.rc != 0
  
  
- name: install imagemagick-distribution-libs
  yum:
    name: "{{ download_location }}/ImageMagick/imagemagick-distribution-7.0.10-11-libs-linux.rpm"
    disablerepo: "\\*"
    enablerepo: "offline-im"
    releasever: "{{ ansible_distribution_major_version }}"
    disable_gpg_check: yes
    state: present
  when: transfer_img_libs_dist is succeeded and magick_exists.rc != 0
  
- name: install imagemagick-distribution
  yum:
    name: "{{ download_location }}/ImageMagick/imagemagick-distribution-7.0.10-11-linux.rpm"
    disablerepo: "\\*"
    enablerepo: "offline-im"
    releasever: "{{ ansible_distribution_major_version }}"
    disable_gpg_check: yes
    state: present
  when: transfer_img_libs_dist is succeeded and magick_exists.rc != 0

- name: Check if LibreOffice exists
  command:
    cmd: "{{ libreoffice_home }}/program/soffice --version"
  register: loffice_exists
  failed_when: false
  changed_when: loffice_exists.rc != 0

#- name: "Download libreoffice {{ libreoffice }} rpm tar.gz"
#  copy:
#    src: "{{ role_path }}/files/libreoffice-dist-{{ libreoffice }}-linux.gz"
#    dest: "{{ download_location }}/libreoffice.tar.gz"
#    mode: 0
#  register: libreoffice_transfer
#  when: loffice_exists.rc != 0

- name: Extract libreoffice-dist-linux.gz
  unarchive:
    src: "{{ role_path }}/files/libreoffice-dist-{{ libreoffice }}-linux.gz"
    dest: "{{ download_location }}/"
    remote_src: false
  when: loffice_exists.rc != 0
  
#- name: install LibreOffice
#  yum:
#    name: "{{ download_location }}/LibreOffice*/RPMS/*.rpm"
#    disablerepo: "\\*"
#    enablerepo: "offline-im"
#    releasever: "{{ ansible_distribution_major_version }}"
#    disable_gpg_check: yes
#    state: present
#  when: loffice_exists.rc != 0
#  changed_when: false  


#Hack to work around the find module using the asterisk literally instead of a wild card.
- name: Move versioned LibreOffice directory to generic
  become: yes
  become_user: root
  command: bash -c 'mv {{ download_location }}/LibreOffice* {{ download_location }}/LibreOffice'
  #command: "mv {{ download_location }}/LibreOffice*/RPMS {{ download_location }}/LibreOffice/RPMS"
  when: loffice_exists.rc != 0


- name: Find all rpm files in "{{ download_location }}/LibreOffice*/RPMS" folder
  find:
    paths: "{{ download_location }}/LibreOffice/RPMS"
    #paths: "{{ download_location }}/LibreOffice_6.3.5.2_Linux_x86-64_rpm/RPMS"
    patterns: "*.rpm"
    recurse: true
  register: rpm_files

- name: Setting rpm_list
  become: true
  become_user: root
  set_fact:
    rpm_list: "{{ rpm_files.files | map(attribute='path') | list}}"

- name: install LibreOffice rpm files
  yum:
    name: "{{rpm_list}}"
    disablerepo: "\\*"
    enablerepo: "offline-im"
    releasever: "{{ ansible_distribution_major_version }}"
    disable_gpg_check: yes
    state: present
  when: loffice_exists.rc != 0




















  
...
